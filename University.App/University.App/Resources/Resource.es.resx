<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept" xml:space="preserve">
    <value>Aceptar</value>
  </data>
  <data name="LoginPageDontHaveAccount" xml:space="preserve">
    <value>¿No tienes una cuenta? Registrese</value>
  </data>
  <data name="NoInternetConnection" xml:space="preserve">
    <value>No hay conexion a internet</value>
  </data>
  <data name="Notification" xml:space="preserve">
    <value>Notificacion</value>
  </data>
  <data name="University" xml:space="preserve">
    <value>Universidad</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Ingresar</value>
  </data>
  <data name="FieldsRequired" xml:space="preserve">
    <value>Los campos son requeridos</value>
  </data>
  <data name="LoginPageLoginMember" xml:space="preserve">
    <value>Inicie sesion o registrese desde aqui para acceder</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Crear</value>
  </data>
  <data name="Wherephoto" xml:space="preserve">
    <value>Dónde vas a hacer la foto</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Cerrar la sesión</value>
  </data>
  <data name="EditProfile" xml:space="preserve">
    <value>Editar Perfil</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirmar la nueva contraseña</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Cambiar</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Contraseña antigua</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>Nueva contraseña</value>
  </data>
  <data name="CreateaNewPassword" xml:space="preserve">
    <value>Crear una nueva contraseña</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Cambiar contraseña</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Bienvenido</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Perfil</value>
  </data>
  <data name="GoToTheMenu" xml:space="preserve">
    <value>Ir al menú</value>
  </data>
  <data name="CreateaNewAccount" xml:space="preserve">
    <value>Crear una nueva cuenta</value>
  </data>
  <data name="TakeNewPicture" xml:space="preserve">
    <value>Haz una nueva foto</value>
  </data>
  <data name="Courses" xml:space="preserve">
    <value>Cursos</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirmar contraseña</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Nombre de usuario</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Registro</value>
  </data>
  <data name="FromGallery" xml:space="preserve">
    <value>Desde la galería</value>
  </data>
  <data name="AboutUs" xml:space="preserve">
    <value>Sobre nosotros</value>
  </data>
  <data name="Claim" xml:space="preserve">
    <value>Reclamación</value>
  </data>
  <data name="Complain" xml:space="preserve">
    <value>Reclamar</value>
  </data>
  <data name="MeetUs" xml:space="preserve">
    <value>Conózcanos</value>
  </data>
  <data name="Petition" xml:space="preserve">
    <value>Petición</value>
  </data>
  <data name="SeeMore" xml:space="preserve">
    <value>Ver más</value>
  </data>
  <data name="SelectTypeRequest" xml:space="preserve">
    <value>Seleccione el tipo de solicitud</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Enviar</value>
  </data>
  <data name="Suggestion" xml:space="preserve">
    <value>Sugerencia</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Título</value>
  </data>
  <data name="TypeRequest" xml:space="preserve">
    <value>Tipo de solicitud</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>Acerca de</value>
  </data>
  <data name="LongText" xml:space="preserve">
    <value>Lorem Ipsum es simplemente el texto ficticio de la industria de la impresión y la composición tipográfica. Lorem Ipsum ha sido el texto ficticio estándar de la industria desde el año 1500, cuando un impresor desconocido tomó una galera de tipos y la revolvió para hacer un libro de muestras de tipos.</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Contraseña</value>
  </data>
  <data name="Theprocessiscorrect" xml:space="preserve">
    <value>El proceso es correcto</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="Bad" xml:space="preserve">
    <value>Mal</value>
  </data>
  <data name="Direction" xml:space="preserve">
    <value>Dirrecion</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Correo</value>
  </data>
  <data name="Excellent" xml:space="preserve">
    <value>Excelente</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Mensaje</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Telefono</value>
  </data>
  <data name="RateOurService" xml:space="preserve">
    <value>Tasa de servicio</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Apellido</value>
  </data>
  <data name="Well" xml:space="preserve">
    <value>Asi</value>
  </data>
  <data name="Acceptable" xml:space="preserve">
    <value>Aceptable</value>
  </data>
  <data name="Regular" xml:space="preserve">
    <value>Regular</value>
  </data>
  <data name="UserId" xml:space="preserve">
    <value>Id de usuario</value>
  </data>
  <data name="TheProcessSuccessful" xml:space="preserve">
    <value>El proceso es exitoso</value>
  </data>
  <data name="Error1" xml:space="preserve">
    <value>La contraseña debe ser mas larga</value>
  </data>
  <data name="Error2" xml:space="preserve">
    <value>No escribio la confirmacion de la contraseña</value>
  </data>
  <data name="Error3" xml:space="preserve">
    <value>La contraseña nueva y la confirmacion no son iguales</value>
  </data>
</root>